# -*- coding: utf-8 -*-
"""Tarea 4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bZXUd9jtwTLonhxeBNEwD8aPZIGRgvxp
"""

import pandas as f
from datetime import datetime

class Cuatro:
    def __init__ (self, nombre):
        try:
            self.__info = f.read_csv(nombre)
            print(self.__info)
        except Exception as e:
            print("Error")

    def calcular_Sueldo(self, N, S, AI, E, h):
        t = datetime.now()
        for j in range(len(self.__info)):
            p = (t.year - self.__info[' '+AI][j]) *.03
            s = self.__info[' '+S][j] + (h * self.__info[' '+E][j]) + (self.__info[' '+S][j]*p)
            print(self.__info[' '+N][j] +": Sueldo base: " + str(self.__info[' '+S][j]) +", Año de ingreso: " + str(self.__info[' '+AI][j]) + ", Horas extra: " + str(self.__info[' '+E][j]) + ", Prestacion: " + str(p))
            print("Sueldo final: " + str(s))

    def empleado_mas_Reciente(self, AI, N, A):
        mi = max(self.__info[' '+AI])
        for j in range(len(self.__info)):
            if self.__info[' '+AI][j] == mi:
                print("Empleado más reciente: " + self.__info[' '+N][j] +' '+ self.__info[' '+A][j])

    def empleado_mas_Antiguo(self, AI, N, A):
        mx = min(self.__info[' '+AI])
        for j in range(len(self.__info)):
            if self.__info[' '+AI][j] == mx:
                print("Empleado más antiguo: " + self.__info[' '+N][j] +' '+ self.__info[' '+A][j])

datos = Cuatro('junio.dat')
datos.calcular_Sueldo('nombres', 'sueldo base', 'año de ingreso', 'horas extra', 276.5)
datos.empleado_mas_Antiguo('año de ingreso', 'nombres', 'paterno')
datos.empleado_mas_Reciente('año de ingreso', 'nombres', 'paterno')